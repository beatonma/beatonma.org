@import "tailwindcss";
@import "./_style/window-insets.css";
@import "./_style/code-syntax-highlighting.css";
@import "./_style/typography.css";
@import "./_style/color.css";

@custom-variant touch (@media(pointer: coarse));
@custom-variant pointer (@media(pointer: fine));
@custom-variant dark {
  &:where([data-theme="dark"], [data-theme="dark"] *) {
    @slot;
  }

  @media (prefers-color-scheme: dark) or (prefers-color-scheme: no-preference) {
    &:where([data-theme="system"], [data-theme="system"] *) {
      @slot;
    }
  }
}
@custom-variant light {
  &:where([data-theme="light"], [data-theme="light"] *) {
    @slot;
  }

  @media (prefers-color-scheme: light) {
    &:where([data-theme="system"], [data-theme="system"] *) {
      @slot;
    }
  }
}

@theme {
  --spacing-em: 1em;
  --spacing-lh: 1lh;
  --spacing-readable: 80ch;
}

:root {
  --max-width: 100vw;
  --max-height: 100vh;
}

::selection {
  background-color: color-mix(
    in srgb,
    var(--selection-bg, var(--fg)) 20%,
    var(--fg)
  );
  color: color-mix(in srgb, var(--selection-fg, var(--bg)) 20%, var(--bg));
}
*:focus-visible {
  @apply outline-on-background ring-background ring-2 outline-2 outline-dashed;
}

@layer base {
  html {
    scrollbar-width: thin;
  }
  body {
    @apply font-sans;

    &[data-theme="light"] {
      @apply colorscheme-light;
    }

    &[data-theme="dark"] {
      @apply colorscheme-dark;
    }
  }
  iframe {
    border: 0;
  }

  a:hover {
    @apply underline;
  }

  img {
    @apply overflow-hidden object-cover;
  }

  input,
  textarea {
    @apply surface-alt rounded-lg px-2 py-1;

    &:focus-visible {
      @apply outline-1 outline-current outline-solid;
    }
  }

  audio::-webkit-media-controls-enclosure {
    @apply rounded-md;
  }
}

@layer components {
  .row {
    @apply flex flex-row items-center;
  }

  .column {
    @apply flex flex-col;
  }

  .touch-target {
    @apply min-h-12 min-w-12;
  }

  .overflow-auto,
  .overflow-x-auto,
  .overflow-y-auto {
    @media (pointer: coarse) {
      scrollbar-width: none;
    }
    @media (pointer: fine) {
      scrollbar-width: thin;
    }

    ::-webkit-scrollbar-track {
      background-color: transparent;
    }
  }

  .scrollbar {
    @media (pointer: coarse) {
      scrollbar-width: thin;
    }
    @media (pointer: fine) {
      scrollbar-width: auto;
    }
  }
}

/* Base surface theme. */
@utility surface {
  --bg: var(--surface);
  --fg: var(--on-surface);
  --vibrant: var(--vibrant-on-surface);
  --muted: var(--muted-on-surface);
  accent-color: var(--vibrant-on-surface);

  background-color: var(--bg);
  color: var(--fg);
  fill: var(--fg);
}

/* Apply a surface color theme. */
/* prettier-ignore */
@utility surface-* {
  --bg: --value(--color-*);
  --fg: --value(--color-on-*);
  accent-color: --value(--color-vibrant-on-*);

  background-color: var(--bg);
  color: var(--fg);
  fill: var(--fg);

  > * {
    --vibrant: --value(--color-vibrant-on-*);
    --muted: --value(--color-muted-on-*);
  }
}

/* Apply a surface theme and a slightly modified variant when hovered. */
/* prettier-ignore */
@utility hover-surface-* {
  @apply transition-colors;

  --bg: --value(--color-*);
  --fg: --value(--color-on-*);
  accent-color: --value(--color-vibrant-on-*);

  background-color: var(--bg);
  color: var(--fg);
  fill: var(--fg);

  > * {
    --vibrant: --value(--color-vibrant-on-*);
    --muted: --value(--color-muted-on-*);
  }

  &:hover:not(:disabled) {
    background-color: color-mix(in srgb, var(--bg) 90%, var(--fg));
  }
}

@utility card {
  @apply overflow-hidden shadow-sm sm:rounded-md;
}
@utility card-hover {
  @apply card transition-shadow hover:shadow-md;
}
@utility card-content {
  @apply px-4 py-2 sm:px-8 sm:py-4;
}
@utility chip {
  @apply rounded-lg select-none;
}
@utility chip-content {
  @apply px-2 py-1;
}
@utility badge {
  @apply rounded-md select-none;
}
@utility badge-content {
  @apply px-1 py-0.5;
}
@utility readable {
  @apply max-w-readable w-full;
  --max-width: min(100%, var(--spacing-readable));
}

/* Make a subgrid that completely fills its parent grid. Useful for sharing named grid areas. */
@utility subgrid-span-full {
  @apply col-span-full col-start-1 row-span-full row-start-1 grid-cols-subgrid grid-rows-subgrid;
}

/* Add a hover background which is a little larger than the element. */
@utility hover-big-background {
  position: relative;
  &::after {
    @apply pointer-events-none absolute -inset-x-2 -inset-y-1 rounded-lg bg-transparent transition-colors;
    content: "";
  }
  &:not(:disabled):hover::after {
    @apply bg-hover;
    content: "";
  }
}

/** Used in HTML generated by Formats markdown -> html */
@utility template-callout {
  @apply card-content my-4 border-s-4;
}
@layer components {
  .template-callout-tip {
    @apply surface-callout-tip template-callout;
  }

  .template-callout-info {
    @apply surface-callout-info template-callout;
  }

  .template-callout-warn {
    @apply surface-callout-warn template-callout;
  }

  .template-callout-caution {
    @apply surface-callout-caution template-callout;
  }

  .template-callout-important {
    @apply surface-callout-important template-callout;
  }
}
