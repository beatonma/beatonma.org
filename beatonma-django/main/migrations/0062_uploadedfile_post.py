# Generated by Django 5.1.7 on 2025-03-14 13:30
import uuid

import colorfield.fields
import django.db.models.deletion
import django.utils.timezone
import main.forms.sanitized_filefield
import main.models.related_file
import mentions.models.mixins.mentionable
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0061_relatedfile_fit_thumbnail"),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="UploadedFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "api_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "file",
                    main.forms.sanitized_filefield.SanitizedFileField(
                        quality=75,
                        size=[2560, 2560],
                        upload_to=main.models.related_file.default_upload_to,
                    ),
                ),
                (
                    "thumbnail",
                    main.forms.sanitized_filefield.SanitizedFileField(
                        blank=True,
                        null=True,
                        quality=75,
                        size=(800, 800),
                        upload_to=main.models.related_file.default_upload_to,
                    ),
                ),
                (
                    "fit",
                    models.CharField(
                        blank=True,
                        choices=[("cover", "Cover"), ("contain", "Container")],
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "original_filename",
                    models.CharField(editable=False, max_length=1024, null=True),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("audio", "Audio"),
                            ("video", "Video"),
                            ("image", "Image"),
                            ("text", "Text"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=10,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="File content description",
                        max_length=255,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "allow_outgoing_webmentions",
                    models.BooleanField(
                        default=mentions.models.mixins.mentionable._outgoing_default,
                        verbose_name="allow outgoing webmentions",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "api_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "is_published",
                    models.BooleanField(default=True, help_text="Publicly visible"),
                ),
                (
                    "published_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "color_muted",
                    colorfield.fields.ColorField(
                        blank=True,
                        default="",
                        image_field=None,
                        max_length=25,
                        samples=[
                            ("#ee4545", "#ee4545"),
                            ("#0e70b8", "#0e70b8"),
                            ("#16b06b", "#16b06b"),
                            ("#823dae", "#823dae"),
                            ("#e13255", "#e13255"),
                            ("#fdf472", "#fdf472"),
                            ("#d86900", "#d86900"),
                            ("#636363", "#636363"),
                            ("#ff6d60", "#ff6d60"),
                            ("#f7d060", "#f7d060"),
                            ("#f3e99f", "#f3e99f"),
                            ("#98d8aa", "#98d8aa"),
                            ("#3c486b", "#3c486b"),
                            ("#f0f0f0", "#f0f0f0"),
                            ("#f9d949", "#f9d949"),
                            ("#f45050", "#f45050"),
                            ("#4d455d", "#4d455d"),
                            ("#e96479", "#e96479"),
                            ("#f5e9cf", "#f5e9cf"),
                            ("#7db9b6", "#7db9b6"),
                            ("#0a4d68", "#0a4d68"),
                            ("#088395", "#088395"),
                            ("#05bfdb", "#05bfdb"),
                            ("#00ffca", "#00ffca"),
                            ("#2c3333", "#2c3333"),
                            ("#2e4f4f", "#2e4f4f"),
                            ("#0e8388", "#0e8388"),
                            ("#cbe4de", "#cbe4de"),
                            ("#181823", "#181823"),
                            ("#537fe7", "#537fe7"),
                            ("#c0eef2", "#c0eef2"),
                            ("#e9f8f9", "#e9f8f9"),
                            ("#483838", "#483838"),
                            ("#42855b", "#42855b"),
                            ("#90b77d", "#90b77d"),
                            ("#d2d79f", "#d2d79f"),
                        ],
                    ),
                ),
                (
                    "color_vibrant",
                    colorfield.fields.ColorField(
                        blank=True,
                        default="",
                        image_field=None,
                        max_length=25,
                        samples=[
                            ("#ee4545", "#ee4545"),
                            ("#0e70b8", "#0e70b8"),
                            ("#16b06b", "#16b06b"),
                            ("#823dae", "#823dae"),
                            ("#e13255", "#e13255"),
                            ("#fdf472", "#fdf472"),
                            ("#d86900", "#d86900"),
                            ("#636363", "#636363"),
                            ("#ff6d60", "#ff6d60"),
                            ("#f7d060", "#f7d060"),
                            ("#f3e99f", "#f3e99f"),
                            ("#98d8aa", "#98d8aa"),
                            ("#3c486b", "#3c486b"),
                            ("#f0f0f0", "#f0f0f0"),
                            ("#f9d949", "#f9d949"),
                            ("#f45050", "#f45050"),
                            ("#4d455d", "#4d455d"),
                            ("#e96479", "#e96479"),
                            ("#f5e9cf", "#f5e9cf"),
                            ("#7db9b6", "#7db9b6"),
                            ("#0a4d68", "#0a4d68"),
                            ("#088395", "#088395"),
                            ("#05bfdb", "#05bfdb"),
                            ("#00ffca", "#00ffca"),
                            ("#2c3333", "#2c3333"),
                            ("#2e4f4f", "#2e4f4f"),
                            ("#0e8388", "#0e8388"),
                            ("#cbe4de", "#cbe4de"),
                            ("#181823", "#181823"),
                            ("#537fe7", "#537fe7"),
                            ("#c0eef2", "#c0eef2"),
                            ("#e9f8f9", "#e9f8f9"),
                            ("#483838", "#483838"),
                            ("#42855b", "#42855b"),
                            ("#90b77d", "#90b77d"),
                            ("#d2d79f", "#d2d79f"),
                        ],
                    ),
                ),
                (
                    "format",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "None"), (1, "Markdown")], default=1
                    ),
                ),
                ("hero_html", models.TextField(blank=True, null=True)),
                ("slug", models.SlugField(editable=False, max_length=255, unique=True)),
                (
                    "old_slug",
                    models.SlugField(editable=False, max_length=255, unique=True),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("subtitle", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "preview_text",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("content", models.TextField(blank=True, null=True)),
                (
                    "content_html",
                    models.TextField(blank=True, editable=False, null=True),
                ),
                ("content_script", models.TextField(blank=True, null=True)),
                (
                    "app",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.app",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "hero_image",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.uploadedfile",
                    ),
                ),
            ],
            options={
                "ordering": ("-published_at",),
                "abstract": False,
            },
        ),
    ]
