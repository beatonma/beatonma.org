# Generated by Django 5.2 on 2025-05-04 17:36

import uuid

import colorfield.fields
import common.microformats
import django.db.migrations.operations.special
import django.db.models.deletion
import django.utils.timezone
import main.forms.filename
import main.models.mixins.styleable_svg
import main.storage
import mentions.models.mixins.mentionable
import taggit.managers
from django.db import migrations, models

_colorfield_samples = [
    ("#ee4545", "#ee4545"),
    ("#0e70b8", "#0e70b8"),
    ("#16b06b", "#16b06b"),
    ("#823dae", "#823dae"),
    ("#e13255", "#e13255"),
    ("#fdf472", "#fdf472"),
    ("#d86900", "#d86900"),
    ("#636363", "#636363"),
    ("#ff6d60", "#ff6d60"),
    ("#f7d060", "#f7d060"),
    ("#f3e99f", "#f3e99f"),
    ("#98d8aa", "#98d8aa"),
    ("#3c486b", "#3c486b"),
    ("#f0f0f0", "#f0f0f0"),
    ("#f9d949", "#f9d949"),
    ("#f45050", "#f45050"),
    ("#4d455d", "#4d455d"),
    ("#e96479", "#e96479"),
    ("#f5e9cf", "#f5e9cf"),
    ("#7db9b6", "#7db9b6"),
    ("#0a4d68", "#0a4d68"),
    ("#088395", "#088395"),
    ("#05bfdb", "#05bfdb"),
    ("#00ffca", "#00ffca"),
    ("#2c3333", "#2c3333"),
    ("#2e4f4f", "#2e4f4f"),
    ("#0e8388", "#0e8388"),
    ("#cbe4de", "#cbe4de"),
    ("#181823", "#181823"),
    ("#537fe7", "#537fe7"),
    ("#c0eef2", "#c0eef2"),
    ("#e9f8f9", "#e9f8f9"),
    ("#483838", "#483838"),
    ("#42855b", "#42855b"),
    ("#90b77d", "#90b77d"),
    ("#d2d79f", "#d2d79f"),
]


class Migration(migrations.Migration):
    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("github", "0004_auto_20220406_1924"),
        ("github", "0007_githublanguage_created_at"),
        ("github", "0014_alter_cachedresponse_data"),
        ("taggit", "0003_taggeditem_add_unique_index"),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Host",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "icon_file",
                    models.FileField(
                        blank=True,
                        help_text="SVG icon",
                        upload_to="icon/",
                        validators=[main.models.mixins.styleable_svg.validate_svg],
                    ),
                ),
                (
                    "icon_svg",
                    models.CharField(
                        blank=True, help_text="<svg> element", max_length=8192
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                (
                    "domain",
                    models.CharField(
                        help_text="Unique url pattern used for parsing",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MessageOfTheDay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=64, null=True)),
                ("content", models.TextField()),
                (
                    "is_published",
                    models.BooleanField(default=True, help_text="Publicly visible"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("public_from", models.DateTimeField(blank=True, null=True)),
                ("public_until", models.DateTimeField(blank=True, null=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "published_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
            ],
            options={
                "verbose_name_plural": "Messages of the Day",
            },
        ),
        migrations.CreateModel(
            name="ThemeOverride",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "is_published",
                    models.BooleanField(default=True, help_text="Publicly visible"),
                ),
                (
                    "published_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "color_muted",
                    colorfield.fields.ColorField(
                        blank=True,
                        default="",
                        image_field=None,
                        max_length=25,
                        samples=_colorfield_samples,
                    ),
                ),
                (
                    "color_vibrant",
                    colorfield.fields.ColorField(
                        blank=True,
                        default="",
                        image_field=None,
                        max_length=25,
                        samples=_colorfield_samples,
                    ),
                ),
                ("public_from", models.DateTimeField(blank=True, null=True)),
                ("public_until", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=256)),
            ],
            options={
                "ordering": [
                    "-is_published",
                    "public_from",
                    "public_until",
                    "-created_at",
                ],
            },
        ),
        migrations.CreateModel(
            name="Link",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("url", models.URLField(max_length=512)),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("source", "Source"),
                            ("install", "Install"),
                            ("download", "Download"),
                            ("webapp", "Webapp"),
                            ("link", "Link"),
                        ],
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "host",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="links",
                        to="main.host",
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=("url", "content_type", "object_id"),
                        name="unique_url_per_target",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="RelatedFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    main.forms.sanitized_filefield.SanitizedFileField(
                        blank=True,
                        quality=75,
                        size=[2560, 1440],
                        upload_to=main.forms.filename.RandomFilename(
                            "related/%Y/",
                            filename_attrs=["description"],
                            filename_literals=[],
                        ),
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="File content description",
                        max_length=140,
                        null=True,
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "original_filename",
                    models.CharField(editable=False, max_length=1024, null=True),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "api_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, null=True),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="relatedfile",
            name="api_id",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name="relatedfile",
            name="type",
            field=models.CharField(
                choices=[
                    ("audio", "Audio"),
                    ("video", "Video"),
                    ("image", "Image"),
                    ("text", "Text"),
                    ("unknown", "Unknown"),
                ],
                default="unknown",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="relatedfile",
            name="thumbnail",
            field=main.forms.sanitized_filefield.SanitizedFileField(
                blank=True,
                null=True,
                quality=75,
                size=(800, 800),
                upload_to=main.models.related_file.default_upload_to,
            ),
        ),
        migrations.AlterField(
            model_name="relatedfile",
            name="description",
            field=models.CharField(
                blank=True,
                default="",
                help_text="File content description",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="relatedfile",
            name="file",
            field=main.forms.sanitized_filefield.SanitizedFileField(
                quality=75,
                size=[2560, 2560],
                upload_to=main.models.related_file.default_upload_to,
            ),
        ),
        migrations.CreateModel(
            name="UploadedFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "api_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "file",
                    main.forms.sanitized_filefield.SanitizedFileField(
                        quality=75,
                        size=[2560, 2560],
                        upload_to=main.models.related_file.default_upload_to,
                    ),
                ),
                (
                    "thumbnail",
                    main.forms.sanitized_filefield.SanitizedFileField(
                        blank=True,
                        null=True,
                        quality=75,
                        size=(800, 800),
                        upload_to=main.models.related_file.default_upload_to,
                    ),
                ),
                (
                    "fit",
                    models.CharField(
                        blank=True,
                        choices=[("cover", "Cover"), ("contain", "Contain")],
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "original_filename",
                    models.CharField(editable=False, max_length=1024, null=True),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("audio", "Audio"),
                            ("video", "Video"),
                            ("image", "Image"),
                            ("text", "Text"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=10,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="File content description",
                        max_length=255,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="relatedfile",
            name="fit",
            field=models.CharField(
                blank=True,
                choices=[("cover", "Cover"), ("contain", "Contain")],
                max_length=32,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="relatedfile",
            name="sort_order",
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name="host",
            name="name",
            field=models.CharField(max_length=255),
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "allow_outgoing_webmentions",
                    models.BooleanField(
                        default=mentions.models.mixins.mentionable._outgoing_default,
                        verbose_name="allow outgoing webmentions",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "api_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "is_published",
                    models.BooleanField(default=True, help_text="Publicly visible"),
                ),
                (
                    "published_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "color_muted",
                    colorfield.fields.ColorField(
                        blank=True,
                        default="",
                        image_field=None,
                        max_length=25,
                        samples=_colorfield_samples,
                    ),
                ),
                (
                    "color_vibrant",
                    colorfield.fields.ColorField(
                        blank=True,
                        default="",
                        image_field=None,
                        max_length=25,
                        samples=_colorfield_samples,
                    ),
                ),
                (
                    "format",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "None"), (1, "Markdown")], default=1
                    ),
                ),
                ("hero_html", models.TextField(blank=True, null=True)),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
                (
                    "old_slug",
                    models.SlugField(
                        editable=False, max_length=255, null=True, unique=True
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("subtitle", models.CharField(blank=True, max_length=255, null=True)),
                ("preview", models.CharField(blank=True, max_length=512, null=True)),
                ("content", models.TextField(blank=True, null=True)),
                (
                    "content_html",
                    models.TextField(blank=True, editable=False, null=True),
                ),
                ("content_script", models.TextField(blank=True, null=True)),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "hero_image",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.uploadedfile",
                    ),
                ),
                ("hero_embedded_url", models.URLField(blank=True, null=True)),
                (
                    "preview_html",
                    models.TextField(blank=True, editable=False, null=True),
                ),
            ],
            options={
                "ordering": ("-published_at",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AboutPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "allow_outgoing_webmentions",
                    models.BooleanField(
                        default=mentions.models.mixins.mentionable._outgoing_default,
                        verbose_name="allow outgoing webmentions",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "api_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "is_published",
                    models.BooleanField(default=True, help_text="Publicly visible"),
                ),
                (
                    "published_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "color_muted",
                    colorfield.fields.ColorField(
                        blank=True,
                        default="",
                        image_field=None,
                        max_length=25,
                        samples=_colorfield_samples,
                    ),
                ),
                (
                    "color_vibrant",
                    colorfield.fields.ColorField(
                        blank=True,
                        default="",
                        image_field=None,
                        max_length=25,
                        samples=_colorfield_samples,
                    ),
                ),
                (
                    "format",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "None"), (1, "Markdown")], default=1
                    ),
                ),
                ("hero_html", models.TextField(blank=True, null=True)),
                ("hero_embedded_url", models.URLField(blank=True, null=True)),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
                (
                    "old_slug",
                    models.SlugField(
                        editable=False, max_length=255, null=True, unique=True
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("subtitle", models.CharField(blank=True, max_length=255, null=True)),
                ("preview", models.CharField(blank=True, max_length=512, null=True)),
                ("content", models.TextField(blank=True, null=True)),
                (
                    "content_html",
                    models.TextField(blank=True, editable=False, null=True),
                ),
                ("content_script", models.TextField(blank=True, null=True)),
                (
                    "hero_image",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.uploadedfile",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "preview_html",
                    models.TextField(blank=True, editable=False, null=True),
                ),
            ],
            options={
                "ordering": ("-published_at",),
                "abstract": False,
            },
        ),
        migrations.RenameField(
            model_name="messageoftheday",
            old_name="content",
            new_name="content_html",
        ),
        migrations.RenameField(
            model_name="messageoftheday",
            old_name="title",
            new_name="description",
        ),
        migrations.AlterField(
            model_name="messageoftheday",
            name="description",
            field=models.CharField(
                blank=True, help_text="Admin only", max_length=64, null=True
            ),
        ),
        migrations.CreateModel(
            name="AppPost",
            fields=[
                (
                    "post_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="main.post",
                    ),
                ),
                ("codename", models.CharField(max_length=255, unique=True)),
                ("script_html", models.TextField(blank=True, null=True)),
                (
                    "script_is_widget",
                    models.BooleanField(
                        default=False,
                        help_text="If true, this app can be included as part of a parent UI. Otherwise it should only displayed as its own window.",
                    ),
                ),
                (
                    "icon",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="main.uploadedfile",
                    ),
                ),
                (
                    "repository",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="app_post",
                        to="github.githubrepository",
                    ),
                ),
            ],
            options={
                "ordering": ("-published_at",),
                "abstract": False,
            },
            bases=("main.post",),
        ),
        migrations.CreateModel(
            name="ChangelogPost",
            fields=[
                (
                    "post_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="main.post",
                    ),
                ),
                ("version", models.CharField(max_length=32)),
                (
                    "app",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="changelogs",
                        to="main.apppost",
                    ),
                ),
            ],
            options={
                "ordering": ("-published_at",),
                "abstract": False,
            },
            bases=("main.post",),
        ),
        migrations.CreateModel(
            name="AppResource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "file",
                    models.FileField(
                        storage=main.storage.OverwriteStorage(),
                        upload_to=main.models.posts.app.appresource_upload_to,
                    ),
                ),
                (
                    "app",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resources",
                        to="main.apppost",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="apppost",
            name="script",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="main.appresource",
            ),
        ),
        migrations.CreateModel(
            name="SiteHCard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        help_text=common.microformats.HCard["p_name"], max_length=255
                    ),
                ),
                ("url", models.URLField(help_text=common.microformats.HCard["u_url"])),
                (
                    "locality",
                    models.CharField(
                        blank=True,
                        help_text=common.microformats.HCard["p_locality"],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        blank=True,
                        help_text=common.microformats.HCard["p_region"],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        help_text=common.microformats.HCard["p_country_name"],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "birthday",
                    models.DateField(
                        blank=True,
                        help_text=common.microformats.HCard["dt_bday"],
                        null=True,
                    ),
                ),
                (
                    "logo",
                    models.ForeignKey(
                        blank=True,
                        help_text=common.microformats.HCard["u_logo"],
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="main.uploadedfile",
                    ),
                ),
                (
                    "photo",
                    models.ForeignKey(
                        blank=True,
                        help_text=common.microformats.HCard["u_photo"],
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="main.uploadedfile",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterModelOptions(
            name="link",
            options={"ordering": ["sort_order"]},
        ),
        migrations.AddField(
            model_name="link",
            name="sort_order",
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="apppost",
            name="widget_style",
            field=models.CharField(
                blank=True,
                help_text="Element style applied to the element that wraps the embedded widget - use to apply a background or padding.",
                max_length=1024,
                null=True,
            ),
        ),
        migrations.CreateModel(
            name="PointsOfInterest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="link",
            name="label",
            field=models.CharField(blank=True, max_length=129, null=True),
        ),
    ]
