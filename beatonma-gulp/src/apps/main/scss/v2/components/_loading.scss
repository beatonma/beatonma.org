@use "v2/core";

.loading--bar {
  position: fixed;
  top: 0;
  height: 4px;
  width: 500px;
  max-width: 100%;
  background-color: var(--vibrant);
  opacity: 0;
  transition: opacity core.$animation-duration,
    width 200ms cubic-bezier(0.4, 0, 0.2, 1),
    left 200ms cubic-bezier(0.4, 0, 0.2, 1);

  &[data-active="true"] {
    animation-name: loading-bar;
    animation-duration: 1200ms;
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    animation-iteration-count: infinite;
    opacity: 1;
  }

  @keyframes loading-bar {
    0% {
      left: 0;
      width: 0;
    }

    50% {
      left: 25%;
      width: 75%;
    }

    75% {
      left: 100%;
      width: 0;
    }

    100% {
      left: 0;
      width: 0;
    }
  }
}

.loading--spinner {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-block: 2rem;

  .spinner-wrapper {
    $size: 12px;

    aspect-ratio: 1;
    display: grid;
    grid-template-rows: auto;
    grid-template-areas:
      "top top"
      "bottomleft bottomright";
    justify-content: center;
    justify-items: center;
    animation-name: loading-spinner;
    animation-iteration-count: infinite;
    animation-duration: 1800ms;
    animation-timing-function: linear;

    > * {
      background-color: var(--on-surface);
      animation-name: loading-item;
      animation-duration: 800ms;
      animation-iteration-count: infinite;
      animation-timing-function: linear;
      border-radius: calc($size / 4);
      margin-inline: calc($size * 1.414);
      margin-block: $size;
      width: $size;
      height: $size;
    }

    :nth-child(1) {
      animation-delay: 0ms;
      grid-area: top;
    }

    :nth-child(2) {
      animation-delay: 180ms;
      grid-area: bottomleft;
    }

    :nth-child(3) {
      animation-delay: 220ms;
      grid-area: bottomright;
    }

    @keyframes loading-spinner {
      100% {
        transform: rotate(360deg);
      }
    }

    @keyframes loading-item {
      $translation: 0.25;

      25% {
        transform: translateX(calc(#{$size} * #{$translation}));
      }

      50% {
        transform: translateX(calc(#{$size} * -#{$translation}))
          translateY(calc(#{$size} * #{$translation})) rotate(-270deg);
      }

      75% {
        transform: translateY(calc(#{$size} * #{$translation}));
      }
    }
  }
}
