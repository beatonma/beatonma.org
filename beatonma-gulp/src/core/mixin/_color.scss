@use "./animation";

$-color-names:
  [ "muted",
  "vibrant"];

/**
 * low/high variants choose light or dark based on theme.
 */
$-contrast-levels:
  [ "light",
  "dark",
  "low-contrast",
  "high-contrast",
  ];

@mixin -foreground-color($-name) {
  --fg-color: var(--on-#{$-name});
  color: var(--fg-color);
  fill: var(--fg-color);
  stroke: var(--fg-color);
}

@mixin -hover($-color) {
  &-hover {
    @include -foreground-color($-color);
    @include animation.transition((background-color color));

    background-color: var(--#{$-color});

    &:hover {
      @include -foreground-color(#{$-color}-hover);

      background-color: var(--#{$-color}-hover);
    }
  }
}

@mixin -surface($-color-name: "surface") {
  @include -foreground-color($-color-name);

  --bg-color: var(--#{$-color-name});
  background-color: var(--bg-color);
}

%surface {
  @include -surface;

  @each $-color in $-color-names {
    &-#{$-color} {
      @include -surface($-color);
      @include -hover($-color);

      @each $-contrast in $-contrast-levels {
        &-#{$-contrast} {
          $-full-name: #{$-color}-#{$-contrast};

          @include -surface($-full-name);
          @include -hover($-full-name);
        }
      }
    }
  }

  &-warn {
    @include -surface("warn");
  }
}

%foreground {
  @each $-color in $-color-names {
    &-#{$-color} {
      @include -foreground-color($-color);

      @each $-contrast in $-contrast-levels {
        &-#{$-contrast} {
          @include -foreground-color(#{$-color}-#{$-contrast});
        }
      }
    }
  }
}

%on {
  @each $-color in $-color-names {
    &-#{$-color} {
      @include -foreground-color(#{$-color});

      @each $-contrast in $-contrast-levels {
        &-#{$-contrast} {
          @include -foreground-color(#{$-color}-#{$-contrast});
        }
      }
    }
  }
}

%scrim-colors {
  @include -surface(scrim);
}
