@use "mixin";

.loading--bar {
  $-duration: 1200ms;

  position: fixed;
  top: 0;
  left: 0;
  height: 4px;
  max-width: 100%;
  background-color: var(--vibrant);
  opacity: 0;
  z-index: var(--elevation-maxvalue);
  @include mixin.transition((background-color));

  &[data-active="true"] {
    animation-name: loading-bar;
    animation-duration: $-duration;
    animation-iteration-count: infinite;
    opacity: 1;

    @include mixin.reduced-motion {
      animation-duration: $-duration * 5;
      background-color: var(--vibrant-low-contrast);
    }
  }

  @keyframes loading-bar {
    0% {
      left: 0;
      width: 0;
    }
    50% {
      left: 0;
      width: 100%;
    }
    100% {
      left: 100%;
      width: 0;
    }
  }
}

.loading--spinner {
  $-duration: 1800ms;

  display: flex;
  align-items: center;
  justify-content: center;
  margin-block: 2rem;

  %-anim {
    animation-iteration-count: infinite;
    animation-direction: normal;
  }

  .spinner-wrapper {
    @extend %-anim;
    $-item-size: 12px;
    $-total-size: 5 * $-item-size;
    $-item-delay: calc($-duration / 5);
    $-center: calc(($-total-size - $-item-size) / 2);
    $-item-offset: $-center - calc($-item-size / 2);

    position: relative;
    width: $-total-size;
    height: $-total-size;
    animation-timing-function: linear;
    animation-name: loading-spinner;
    animation-duration: $-duration;

    --loading-spinner-animation-factor: 0.7;

    @include mixin.reduced-motion {
      --loading-spinner-animation-factor: 0.9;
      animation-name: none;
    }

    > div {
      @extend %-anim;
      position: absolute;
      background-color: var(--on-surface);
      animation-name: loading-item;
      animation-duration: $-duration * 0.6;
      animation-timing-function: ease-out;
      border-radius: #{$-item-size} / 4;
      width: $-item-size;
      height: $-item-size;
      left: $-center;
      top: $-center;
      transform-origin: center;
    }

    @for $index from 0 through 2 {
      :nth-child(#{$index + 1}) {
        animation-name: loading-item-#{$index};
        transform: rotate($index * 120deg) translateY(-$-item-offset);
      }

      @keyframes loading-item-#{$index} {
        50% {
          transform: rotate($index * 120deg)
            translateY(
              calc(-#{$-item-offset} * var(--loading-spinner-animation-factor))
            );
        }
      }
    }

    @keyframes loading-spinner {
      100% {
        transform: rotate(360deg);
      }
    }
  }
}
