version: "3.9"
name: bma

volumes:
  letsencrypt:
    # Created via compose.certbot.yml
    name: letsencrypt_keys
    external: true

  postgres:
    # Created via compose.db-init.yml
    name: postgres_beatonma
    external: true


# Common settings for all services
x-common: &common-defaults
  env_file:
    - ".env"
  restart: unless-stopped
  tty: true


x-health: &health
  interval: 30s
  timeout: 10s
  start_period: 20s


services:
  db:
    <<: *common-defaults
    image: postgres:15-alpine
    container_name: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready
      <<: *health

  django:
    <<: *common-defaults
    build:
      context: .
      target: app
    container_name: django
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:8000/ping/ || exit 1
      <<: *health
    ports:
      - "8000"
    volumes:
      - /var/www/static:/var/www/static
      - /var/www/media:/var/www/media

  nginx:
    <<: *common-defaults
    build:
      context: .
      target: server
    container_name: nginx
    depends_on:
      django:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost/health-check/ || exit 1
      <<: *health
    volumes:
      - letsencrypt:/etc/letsencrypt
      - /var/www/static:/var/www/static:ro
      - /var/www/media:/var/www/media:ro
    ports:
      - "80:80"
      - "443:443"

#  celery:
#    <<: *common-defaults
#    build:
#      context: .
#      target: celery
#    container_name: celery
#    depends_on:
#      rabbitmq:
#        condition: service_healthy
#
#  crontab:
#    <<: *common-defaults
#    build:
#      context: .
#      target: crontab
#    container_name: crontab
#    depends_on:
#      - django
#    command: crond -f
#
#  rabbitmq:
#    <<: *common-defaults
#    image: rabbitmq:3-alpine
#    container_name: rabbitmq
#    healthcheck:
#      test: rabbitmq-diagnostics -q ping
#      <<: *health
#    ports:
#      - "5672"
#
#  server_startup_checks:
#    build:
#      context: .
#      target: server_checks
#    links:
#      - "nginx:nginx-server-tests"
#    container_name: server_startup_checks
#    depends_on:
#      - nginx
#    restart: "no"
