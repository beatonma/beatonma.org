name: bma_dev

volumes:
  postgres:

x-common: &common
  env_file: "./.env.dev"
  restart: "unless-stopped"
  tty: true

x-volume-django: &volume-django
  - type: bind
    source: ./beatonma-django
    target: /django
    read_only: true
x-volume-media: &volume-static
  - type: bind
    source: /var/www/static
    target: /var/www/static
x-volume-static: &volume-media
  - type: bind
    source: /var/www/media
    target: /var/www/media

services:
  db:
    <<: *common
    extends:
      file: ./compose.common.yml
      service: postgres
    container_name: "dev_postgres"
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    <<: *common
    extends:
      file: ./compose.common.yml
      service: redis

  django: &django
    <<: *common
    build:
      target: dev_django
    extends:
      file: ./compose.common.yml
      service: django
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8001:8000"
    volumes:
      - <<: *volume-django
      - <<: *volume-media
      - <<: *volume-static

  django_manage:
    <<: *django
    profiles:
      - "manage"
    ports: []
    volumes:
      - <<: *volume-django
        read_only: false
      - <<: *volume-media
      - <<: *volume-static
    healthcheck:
      test: [ "NONE" ]
    entrypoint: [ "sh" ]

  next:
    <<: *common
    build:
      target: dev_nextjs
    extends:
      file: compose.common.yml
      service: next
    depends_on:
      django:
          condition: service_healthy
    ports:
      - "3001:3000"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./frontend/package.json

  nginx:
    <<: *common
    build:
      target: dev_nginx
    extends:
      file: compose.common.yml
      service: nginx
    depends_on:
      django:
          condition: service_healthy
      next:
          condition: service_healthy
    ports:
      - "81:80"
    volumes:
      - <<: *volume-media
      - <<: *volume-static

  celery:
    <<: *common
    build:
      target: dev_celery
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - <<: *volume-django
