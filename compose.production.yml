name: bma

volumes:
  letsencrypt:
    # Created via `bma certbot init`.
    name: letsencrypt_keys
    external: true

  letsencrypt_webroot:
    # Created via `bma certbot init`.
    name: letsencrypt_webroot
    external: true

  postgres:
    name: postgres_beatonma


# Common settings for all services
x-common: &common
  env_file:
    - "./.env.production"
  restart: unless-stopped
  tty: true

# Common volume bindings
x-volume-beatonma: &volume-beatonma
  - type: bind
    source: /var/www/beatonma
    target: /var/www/beatonma
    read_only: true
x-volume-media: &volume-static
  - type: bind
    source: /var/www/static
    target: /var/www/static
    read_only: true
x-volume-static: &volume-media
  - type: bind
    source: /var/www/media
    target: /var/www/media
    read_only: true

services:
  db:
    <<: *common
    extends:
      file: compose.common.yml
      service: postgres
    container_name: postgres
    volumes:
      - postgres:/var/lib/postgresql/data

  django:
    <<: *common
    image: fallofmath/beatonma:django
    build:
      target: production_django
    extends:
      file: compose.common.yml
      service: django
    container_name: django
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - <<: *volume-beatonma
      - <<: *volume-media
        read_only: false
      - <<: *volume-static
        read_only: false

  next:
    <<: *common
    image: fallofmath/beatonma:next
    build:
      target: production_nextjs
    extends:
      file: compose.common.yml
      service: next
    depends_on:
      django:
        condition: service_healthy

  nginx:
    <<: *common
    image: fallofmath/beatonma:nginx
    build:
      target: production_nginx
    extends:
      file: compose.common.yml
      service: nginx
    container_name: nginx
    depends_on:
      django:
        condition: service_healthy
      next:
        condition: service_healthy
    volumes:
      - <<: *volume-media
      - <<: *volume-static
      - /var/log/nginx:/var/log/nginx  # Make logs accessible for fail2ban
      - letsencrypt:/etc/letsencrypt  # letsencrypt certificates
      - letsencrypt_webroot:/var/www/letsencrypt:ro  # letsencrypt renewal webroot
    ports:
      - "80:80"
      - "443:443"

  celery:
    <<: *common
    image: fallofmath/beatonma:celery
    build:
      target: production_celery
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - <<: *volume-beatonma

  crontab:
    <<: *common
    image: fallofmath/beatonma:crontab
    build:
      target: production_crontab
    depends_on:
      - django
    volumes:
      - <<: *volume-beatonma

  redis:
    <<: *common
    extends:
      file: compose.common.yml
      service: redis

  server_startup_checks:
    image: fallofmath/beatonma:startup_checks
    build:
      target: production_server_checks
    links:
      - "nginx:nginx-server-tests"
    depends_on:
      - nginx
    restart: "on-failure"
