name: bma

volumes:
  letsencrypt:
    # Created via `bma certbot init`.
    name: letsencrypt_keys
    external: true

  letsencrypt_webroot:
    # Created via `bma certbot init`.
    name: letsencrypt_webroot
    external: true

  postgres:
    name: postgres_beatonma


# Common settings for all services
x-common: &common-defaults
  env_file:
    - "./.env"
  restart: unless-stopped
  tty: true


x-health: &health
  interval: 30s
  timeout: 10s
  start_period: 20s


services:
  db:
    <<: *common-defaults
    image: postgres:15-alpine
    container_name: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready
      <<: *health

  django:
    <<: *common-defaults
    build:
      context: .
      target: app
      dockerfile: ./docker/Dockerfile
    image: fallofmath/beatonma:django
    container_name: django
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl --head --fail http://localhost:8000/api/ping/ || exit 1
      <<: *health
      interval: 600s
    ports:
      - "8000"
    volumes:
      - /var/www/static:/var/www/static
      - /var/www/media:/var/www/media
      - /var/www/beatonma:/var/www/beatonma:ro

  nginx:
    <<: *common-defaults
    build:
      context: .
      target: server
      dockerfile: ./docker/Dockerfile
    image: fallofmath/beatonma:nginx
    container_name: nginx
    depends_on:
      django:
        condition: service_healthy
    healthcheck:
      test: curl --head --fail http://localhost/health-check/ || exit 1
      <<: *health
    volumes:
      - /var/log/nginx:/var/log/nginx  # Make logs accessible for fail2ban
      - letsencrypt:/etc/letsencrypt  # letsencrypt certificates
      - letsencrypt_webroot:/var/www/letsencrypt:ro  # letsencrypt renewal webroot
      - /var/www/static:/var/www/static:ro
      - /var/www/media:/var/www/media:ro
    ports:
      - "80:80"
      - "443:443"

  celery:
    <<: *common-defaults
    build:
      context: .
      target: celery
      dockerfile: ./docker/Dockerfile
    image: fallofmath/beatonma:celery
    container_name: celery
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - /var/www/beatonma:/var/www/beatonma:ro

  crontab:
    <<: *common-defaults
    build:
      context: .
      target: crontab
      dockerfile: ./docker/Dockerfile
    image: fallofmath/beatonma:crontab
    container_name: crontab
    depends_on:
      - django
    command: crond -f

  rabbitmq:
    <<: *common-defaults
    image: rabbitmq:3-alpine
    container_name: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      <<: *health
    ports:
      - "5672"

  server_startup_checks:
    build:
      context: .
      target: server_checks
      dockerfile: ./docker/Dockerfile
    image: fallofmath/beatonma:startup_checks
    links:
      - "nginx:nginx-server-tests"
    container_name: server_startup_checks
    depends_on:
      - nginx
    restart: "no"
